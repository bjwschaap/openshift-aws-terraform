# OpenShift Inventory Template.
# Note that when the infrastructure is generated by terraform, this file is
# expanded into './inventory.cfg', based on the rules in:
#
#   ./modules/openshift/12-inventory.tf

# Create an OSEv3 group that contains the masters, infra and nodes groups
[OSEv3:children]
masters
nodes
etcd

[OSEv3:vars]
# Ansible SSH settings
ansible_ssh_user=ec2-user
ansible_become=true

# General settings
deployment_type=origin
openshift_release=v3.9
debug_level=2
openshift_debug_level=2
openshift_node_debug_level=2
openshift_master_debug_level=2
openshift_master_access_token_max_seconds=2419200
openshift_master_api_port=443
openshift_master_console_port=443
osm_cluster_network_cidr=${cluster_network_cidr}
openshift_registry_selector="role=infra"
openshift_router_selector="role=infra"
openshift_hosted_router_replicas=3
openshift_hosted_registry_replicas=3
openshift_master_cluster_method=native
openshift_node_local_quota_per_fsgroup=512Mi
openshift_cloudprovider_kind=aws
openshift_master_cluster_hostname=${internal_hostname}
openshift_master_cluster_public_hostname=${public_hostname}
osm_default_subdomain=${app_dns_prefix}.${hosted_zone}
openshift_master_default_subdomain=${app_dns_prefix}.${hosted_zone}
osm_default_node_selector="role=app"
os_sdn_network_plugin_name=redhat/openshift-ovs-multitenant
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
openshift_master_htpasswd_users={'admin': '$apr1$PfSPWzcK$T6yHdlnoWNj26ZI6Wt4w/0'}
# openshift_master_identity_providers=[{'name': 'github', 'challenge': 'false', 'login': 'true', 'kind': 'GitHubIdentityProvider', 'mapping_method': 'claim', 'clientID': '${github_client_id}', 'clientSecret': '${github_client_secret}', 'organizations': {'['["${github_organization}"]']'}}]
osm_use_cockpit=true
openshift_clusterid=${stackname}
openshift_cloudprovider_aws_single_cluster=false
containerized=False

# Registry
openshift_hosted_registry_storage_kind=object
openshift_hosted_registry_storage_provider=s3
openshift_hosted_registry_storage_s3_accesskey=${access_key}
openshift_hosted_registry_storage_s3_secretkey=${secret_key}
openshift_hosted_registry_storage_s3_bucket=${registry_s3_bucket}
openshift_hosted_registry_storage_s3_region=eu-west-1
openshift_hosted_registry_storage_s3_chunksize=26214400
openshift_hosted_registry_storage_s3_rootdirectory=/registry
openshift_hosted_registry_pullthrough=true
openshift_hosted_registry_acceptschema2=true
openshift_hosted_registry_enforcequota=true
openshift_registry_selector={"role":"infra"}

# metrics
openshift_metrics_hawkular_nodeselector={"role":"infra"}
openshift_metrics_cassandra_nodeselector={"role":"infra"}
openshift_metrics_heapster_nodeselector={"role":"infra"}
openshift_metrics_install_metrics=true
openshift_metrics_cassandra_storage_type=dynamic

# logging
openshift_logging_install_logging=true
openshift_logging_es_pvc_dynamic=true
openshift_logging_es_pvc_size="100Gi"
openshift_logging_es_cluster_size=3
openshift_logging_es_nodeselector={"role":"infra"}
openshift_logging_kibana_nodeselector={"role":"infra"}
openshift_logging_curator_nodeselector={"role":"infra"}

# Use API keys i/o instance roles so that tenant containers don't get Openshift's EC2/EBS permissions
openshift_cloudprovider_kind=aws
openshift_cloudprovider_aws_access_key=${access_key}
openshift_cloudprovider_aws_secret_key=${secret_key}

[masters]
ose-master-[1:${master_node_count}].${hosted_zone}

[etcd]
ose-master-[1:${master_node_count}].${hosted_zone}

[nodes]
${master_entries}
${infra_entries}
${app_entries}
